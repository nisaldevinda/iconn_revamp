<?php

namespace App\Services;

use Log;
use App\Exceptions\Exception;
use \Firebase\JWT\JWT;

/**
 * Purpose: Performs signin and other tasks related to users with microsoft accounts. 
 * Description: MicrosoftLoginService class is called from SocialLoginController when a user
 * attempts to login to the system with a microsoft acount. MicrosoftLoginService is used to generate microsoft login urls 
 * for system based on application registration data in Azure portal and to retrive user email address by validating the id_token.
 * ToDo: Validation of the id_token.
 * Module Creator: Chalaka
 */
class MicrosoftLoginService extends BaseService
{

    private $location;
    private $loginTenant;
    private $clientId;
    private $responseType;
    private $redirectUri;
    private $responseMode;
    private $scopes;
    private $nonce;
    private $state;

    public function __construct()
    {
        $this->location  = env('MICROSOFT_LOGIN_LOCATION', "");
        $this->loginTenant  = env('MICROSOFT_LOGIN_TENANT', "");
        $this->clientId  = env('MICROSOFT_LOGIN_CLIENT_ID', "");
        $this->responseType  = env('MICROSOFT_LOGIN_RESPONSE_TYPE', "");
        $this->redirectUri  = env('MICROSOFT_LOGIN_REDIRECT_URI', "");
        $this->responseMode  = env('MICROSOFT_LOGIN_RESPONSE_MODE', "");
        $this->scopes  = env('MICROSOFT_LOGIN_SCOPES', "");
        $this->nonce  = env('MICROSOFT_LOGIN_NONCE', "");
        $this->state  = env('MICROSOFT_LOGIN_STATE', "");
    }
    
    /**
     * Generates a url that can be used in the client app in order to sign in with a microsoft account.
     * 
     * @return array
     * 
     * Sample output: 
     * [
     *      $statusCode => 200,
     *      $message => "URL generated Successfully!",
     *      $users => ["url" : "https://login.microsoftonline.com/organizations/oauth2/v2.0/authorize?client_id=5f5c9a2c&response_type=id_token&redirect_uri=http://s.com/redirect&response_mode=form_post&scope=openid&state=125&nonce=6d"]
     * ]
     */
    public function generateLoginURL()
    {
        
        try {
            $url = $this->location.$this->loginTenant."/oauth2/v2.0/authorize?client_id=".$this->clientId."&response_type=".$this->responseType."&redirect_uri=".$this->redirectUri."&response_mode=".$this->responseMode."&scope=".$this->scopes."&state=".$this->state."&nonce=".$this->nonce;
            return $this->success(200, "URL generated Successfully!", array("url" => $url));
        } catch (Exception $e) {
            Log::error($e->getMessage());
            return $this->error(500, "Invalid Request.", null);
        }
        
    }

    /**
     * Return the decoded email from the token.  A request sent to the URL generated by generateLoginURL()
     * is expected to redirect to a given URL in the system. That response contains the $token parameter used in this method.
     * 
     * @return array
     * 
     * Usage:
     * $token => "xxxxx.yyyyy.zzzzz"
     * 
     * Sample output: 
     * [
     *      $statusCode => 200,
     *      $message => "Email Retrieved Successfully.",
     *      $users => ["email" : "sample@microsoft.com"]
     * ]
     */
    public function getEmailFromToken($token)
    {
        try {
            if (isset($token)) {
                $tks = explode('.', $token);
                $payload = JWT::jsonDecode(JWT::urlsafeB64Decode($tks[1]));
                
                return $this->success(201, "Email Retrieved Successfully.", array("email" => $payload->{"email"}));
              } else {
                throw new \Exception("Invalid User.");
              }
        } catch (Exception $e) {
            Log::error($e->getMessage());
            return $this->error(500, "Invalid User.", null);
        }
        
    }
}